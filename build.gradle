plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.tripcut'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    // Swagger/OpenAPI 3
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    implementation 'org.modelmapper:modelmapper:3.2.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.batch:spring-batch-test'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Docker 빌드 최적화 설정
jar {
    enabled = false
    archiveClassifier = ''
}

bootJar {
    enabled = true
    archiveClassifier = ''
    archiveFileName = 'tripcut-api.jar'
    
    // 실행 가능한 JAR 최적화
    layered {
        enabled = true
    }
}

// Docker 이미지 빌드를 위한 태스크
task dockerBuild(type: Exec) {
    dependsOn bootJar
    description = 'Build Docker image'
    group = 'docker'
    commandLine 'docker', 'build', '-t', 'tripcut-api:latest', '.'
}

task dockerRun(type: Exec) {
    dependsOn dockerBuild
    description = 'Run Docker container'
    group = 'docker'
    commandLine 'docker', 'run', '-p', '8080:8080', '--name', 'tripcut-api-container', 'tripcut-api:latest'
}

// 테스트 실행 시 시스템 속성 설정
test {
    systemProperty 'spring.profiles.active', 'test'
}
